		AREA ASCEND,CODE,READONLY
			ENTRY
			MOV R8,#4
			LDR R2,=CVALUE
			LDR R3,=DVALUE
LOOP0							; COPY VALUES TO DVALUE REGISTER
			LDR R1,[R2],#4		; LOADING THE VALUES INTO CVALUE
			STR R1,[R3],#4		; STORING THE VALUES INTO DVALUE
			SUBS R8,R8,#1		; LOOP COUNTER IS DECREMENTED
			CMP R8,#0			; R8 VALUE IS COMPARED TO 0
			BNE LOOP0			; IF R8 != 0 THEN LOOP AGAIN TO LOOP0
START1
			MOV R5,#3			; R5 CONTAINS NUMBER OF EXCHANGES OR SWAPS
			MOV R7,#0			; R7 IS FOR FLAG
			LDR R1,=DVALUE		; BEFORE SORT WE NEED TO SET POINTER LOCATION
LOOP
			LDR R2,[R1],#4		; GET THE 1ST ELEMENT
			LDR R3,[R1]			; GETTING THE NEXT ELEMENT
			CMP R2,R3			; VALUES IN R2 AND R3 COMPARED
			BLT LOOP2			; IF R2 LESS THAN R3 THEN GO TO LOOP2
			STR R2,[R1],#-4		; ACCESS THE PREVIOUS LOCATION
			STR R3,[R1]
			MOV R7,#1			; IN ORDER TO INDICATE SWAP TAKEN PLACE
			ADD R1,#4			; IN ORDER TO SET POINTER TO NEXT MEMORY LOC
LOOP2
			SUBS R5,R5,#1		; SUBTRACT 1 FROM R5
			CMP R5,#0			; COMPARE IT WITH 0
			BNE LOOP			; IF R5 IS NOT ZERO THEN GO BACK TO LOOP
			CMP R7,#0
			BNE START1
L			B L
CVALUE		DCD 0X44444444,0X11111111,0X33333333,0X22222222
		AREA MYDATA,DATA,READWRITE
DVALUE		DCD 0
			END


			